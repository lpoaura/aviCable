# Generated by Django 4.0.3 on 2022-03-21 13:57

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("sinp_nomenclatures", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseLayers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(max_length=100, verbose_name="Name"),
                ),
                ("url", models.TextField(max_length=256, verbose_name="Url")),
                (
                    "attribution",
                    models.TextField(
                        max_length=256, verbose_name="Attribution"
                    ),
                ),
                (
                    "default",
                    models.BooleanField(
                        default=False, verbose_name="Default base layer"
                    ),
                ),
            ],
            options={
                "verbose_name": "Base layers list",
                "verbose_name_plural": "Base layers list",
            },
        ),
        migrations.CreateModel(
            name="VectorLayerConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "layer_name",
                    models.TextField(
                        max_length=100, verbose_name="layer name"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Geographic data category",
                        limit_choices_to={
                            "type__mnemonic": "custom_gis_data_type"
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="custom_gis_data_type",
                        to="sinp_nomenclatures.nomenclature",
                        verbose_name="Geographic data category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VectorLayerTheming",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.TextField(verbose_name="Label")),
                (
                    "min",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Min"
                    ),
                ),
                (
                    "max",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Max"
                    ),
                ),
                (
                    "numeric_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Numeric value"
                    ),
                ),
                (
                    "string_value",
                    models.TextField(
                        blank=True, null=True, verbose_name="String value"
                    ),
                ),
                ("style", models.JSONField(verbose_name="Style as JSON")),
                (
                    "condition_path",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(max_length=100), size=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VectorLayerData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(blank=True, max_length=100, null=True),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=4326, verbose_name="geom"
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="JSON Data"
                    ),
                ),
                (
                    "config",
                    models.ForeignKey(
                        help_text="Category",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="vector_layer_data",
                        to="map_layers.vectorlayerconfig",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom GIS data",
                "verbose_name_plural": "Custom GIS data",
            },
        ),
        migrations.AddField(
            model_name="vectorlayerconfig",
            name="styles",
            field=models.ManyToManyField(
                related_name="config",
                to="map_layers.vectorlayertheming",
                verbose_name="Style",
            ),
        ),
    ]
